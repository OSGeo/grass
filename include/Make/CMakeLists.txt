function(print_all_variables)
  message(STATUS "CMake Variables:")
  get_cmake_property(_variableNames VARIABLES)
  list(SORT _variableNames)
  foreach(_variableName ${_variableNames})
    message(STATUS "EDY -- ${_variableName}=${${_variableName}}")
  endforeach()
  message(STATUS "End of CMake Variables:")
endfunction()

print_all_variables()
block()
if(NOT CC)
  set(CC ${CMAKE_C_COMPILER})
endif()
if(NOT CXX)
  set(CXX ${CMAKE_CXX_COMPILER})
endif()
if(NOT LEX)
  set(LEX ${FLEX_EXECUTABLE})
endif()
if(NOT YACC)
  set(YACC ${BISON_EXECUTABLE})
endif()
# TODO: PERL
if(NOT AR)
  set(AR ${CMAKE_AR})
endif()
if(NOT RANLIB)
  set(RANLIB ${CMAKE_RANLIB})
endif()
if(NOT INSTALL)
  find_program(INSTALL_PATH NAMES install REQUIRED)
  set(INSTALL "${INSTALL_PATH} -c")
endif()
if(NOT INSTALL_DATA)
  set(INSTALL_DATA "${INSTALL} -m 644")
endif()
if(NOT prefix)
  set(prefix ${CMAKE_INSTALL_PREFIX})
endif()
if(NOT exec_prefix)
  set(exec_prefix ${CMAKE_INSTALL_PREFIX})
endif()
if(NOT host)
  set(host "${BUILD_ARCH}")
  # set(host ${CMAKE_C_LIBRARY_ARCHITECTURE})
endif()
if(NOT ARCH_DISTDIR)
  set(ARCH_DISTDIR ${RUN_GISBASE_NATIVE})
endif()
if(NOT BINDIR)
  set(BINDIR ${CMAKE_INSTALL_FULL_BINDIR})
endif()
if(NOT INSTDIR)
  set(INSTDIR ${CMAKE_INSTALL_PREFIX}/${GISBASE_DIR})
endif()
if(NOT GRASS_HOME)
  set(GRASS_HOME ${OUTDIR})
endif()
if(NOT LD_LIBRARY_PATH_VAR)
  set(LD_LIBRARY_PATH_VAR "LD_LIBRARY_PATH")
endif()
if(NOT GRASS_LIBRARY_TYPE)
  if(BUILD_SHARED_LIBS)
    set(GRASS_LIBRARY_TYPE "shlib")
  else()
    set(GRASS_LIBRARY_TYPE "stlib")
  endif()
endif()
if(NOT STLIB_LD)
  set(STLIB_LD "${AR} cr")
endif()
if(NOT STLIB_SUFFIX)
  set(STLIB_SUFFIX ${CMAKE_STATIC_LIBRARY_SUFFIX})
endif()
# TODO: section of SHLIB variables
if(NOT SHLIB_LD)
  set(SHLIB_LD "${CC} ${CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS}")
endif()
if(NOT SHLIB_LDX)
  set(SHLIB_LDX "${CXX} ${CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS}")
endif()
if(NOT SHLIB_CFLAGS)
  set(SHLIB_CFLAGS ${CMAKE_SHARED_LIBRARY_C_FLAGS})
endif()
if(NOT SHLIB_SUFFIX)
  set(SHLIB_SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX})
endif()

if(NOT CFLAGS)
  set(CFLAGS ${GRASS_C_FLAGS})
endif()
if(NOT CXXFLAGS)
  set(CXXFLAGS ${GRASS_CXX_FLAGS})
endif()

if(NOT USE_X11)
  if(WITH_X11)
    set(USE_X11 "1")
  else()
    set(USE_X11 "0")
  endif()
endif()
# NetCDF
if(NOT NETCDF_CFLAGS)
  list(JOIN PC_NetCDF_CFLAGS " " NETCDF_CFLAGS)
endif()
if(NOT NETCDF_LIBS)
  list(JOIN PC_NetCDF_LDFLAGS " " NETCDF_LIBS)
endif()
if(NOT USE_NETCDF)
  set(USE_NETCDF ${HAVE_NETCDF})
endif()

# Cairo
if(NOT CAIRO_HAS_XRENDER_SURFACE)
  set(CAIRO_HAS_XRENDER_SURFACE ${CAIRO_HAS_XLIB_XRENDER_SURFACE})
endif()

#OpenMP
if(NOT OPENMP_CFLAGS)
  set(OPENMP_CFLAGS ${OpenMP_C_FLAGS})
endif()
if(NOT USE_OPENMP)
  if(WITH_OPENMP AND OpenMP_FOUND)
    set(USE_OPENMP 1)
  endif()
endif()

if(NOT HAVE_NLS)
  if(WITH_NLS)
    set(HAVE_NLS ${USE_NLS})
  endif()
endif()

if(NOT CROSS_COMPILING)
  if(CMAKE_CROSSCOMPILING)
    set(CROSS_COMPILING "yes")
  else()
    set(CROSS_COMPILING "no")
  endif()
endif()

configure_file(Platform.make.in Platform.make @ONLY)
endblock()

# file(GLOB_RECURSE SRCMAKES "*.make")
# set(include_make_depends)
# foreach(srcmake ${SRCMAKES})
#   get_filename_component(srcmake_DIR ${srcmake} DIRECTORY)
#   get_filename_component(srcmake_NAME ${srcmake} NAME)
#   string(REPLACE "${CMAKE_CURRENT_SOURCE_DIR}/" "" dstmake_DIR "${srcmake_DIR}")
#   set(output_dir1 ${OUTDIR}/${GRASS_INSTALL_INCLUDEDIR}/${dstmake_DIR})
#   add_custom_command(
#     OUTPUT ${output_dir1}/${srcmake_NAME}
#     COMMAND ${CMAKE_COMMAND} -E make_directory ${output_dir1}
#     COMMAND ${CMAKE_COMMAND} -E copy ${srcmake} ${output_dir1}
#     COMMENT "Copy ${srcmake} to ${output_dir1}/${srcmake_NAME}")
#   list(APPEND include_make_depends ${output_dir1}/${srcmake_NAME})
# endforeach()

# add_custom_target(copy_make DEPENDS ${include_make_depends} LIB_PYTHON)

# # configure_file(${CMAKE_CURRENT_SOURCE_DIR}/grass/version.h.in
# #                "${OUTDIR}/${GRASS_INSTALL_INCLUDEDIR}/grass/version.h")

# # message(STATUS "Creating ${OUTDIR}/${GRASS_INSTALL_INCLUDEDIR}/grass/config.h")

# # configure_file(${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake.in
# #                "${OUTDIR}/${GRASS_INSTALL_INCLUDEDIR}/grass/config.h")

# # # TODO: this presently skips empty lines, but should be included
# # file(WRITE ${OUTDIR}/${GRASS_INSTALL_INCLUDEDIR}/grass/copying.h "")
# # file(STRINGS ${CMAKE_SOURCE_DIR}/COPYING copying_lines)
# # foreach(copying_line ${copying_lines})
# #   file(APPEND ${OUTDIR}/${GRASS_INSTALL_INCLUDEDIR}/grass/copying.h
# #        "\"${copying_line} \\n\"\n")
# # endforeach()

# # # TODO: this presently skips empty lines, but should be included
# # file(WRITE ${OUTDIR}/${GRASS_INSTALL_INCLUDEDIR}/grass/citing.h "")
# # file(STRINGS ${CMAKE_SOURCE_DIR}/CITING citing_lines)
# # foreach(citing_line ${citing_lines})
# #   file(APPEND ${OUTDIR}/${GRASS_INSTALL_INCLUDEDIR}/grass/citing.h
# #        "\"${citing_line}\\n\"\n")
# # endforeach()

# # # TODO file(READ  ${CMAKE_SOURCE_DIR}/config.status config_status_header)
# # file(WRITE ${OUTDIR}/${GRASS_INSTALL_INCLUDEDIR}/grass/confparms.h
# #      "\"/*  */\\n\"")

# install(DIRECTORY ${OUTDIR}/${GRASS_INSTALL_INCLUDEDIR}/
#         DESTINATION ${GRASS_INSTALL_INCLUDEDIR})
