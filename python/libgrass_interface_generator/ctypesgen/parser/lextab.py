# lextab.py. This file automatically created by PLY (version 3.11). Don't edit!
_tabversion   = '3.10'
_lextokens    = set(('ADD_ASSIGN', 'AND', 'AND_ASSIGN', 'AND_OP', 'AUTO', 'BREAK', 'CASE', 'CHAR', 'CHARACTER_CONSTANT', 'COLON', 'COMMA', 'CONDOP', 'CONST', 'CONTINUE', 'DEC_OP', 'DEFAULT', 'DIVIDE', 'DIV_ASSIGN', 'DO', 'DOUBLE', 'ELLIPSIS', 'ELSE', 'ENUM', 'EQUALS', 'EQ_OP', 'EXTERN', 'FLOAT', 'FOR', 'F_CONST_1', 'F_CONST_2', 'F_CONST_3', 'F_CONST_4', 'F_CONST_5', 'F_CONST_6', 'GE_OP', 'GOTO', 'GT', 'IDENTIFIER', 'IF', 'INC_OP', 'INT', 'I_CONST_BIN', 'I_CONST_DEC', 'I_CONST_HEX', 'I_CONST_OCT', 'LBRACE', 'LBRACKET', 'LEFT_ASSIGN', 'LEFT_OP', 'LE_OP', 'LNOT', 'LONG', 'LPAREN', 'LT', 'MINUS', 'MOD', 'MOD_ASSIGN', 'MUL_ASSIGN', 'NE_OP', 'NOT', 'OR', 'OR_ASSIGN', 'OR_OP', 'PERIOD', 'PLUS', 'PP_DEFINE', 'PP_DEFINE_MACRO_NAME', 'PP_DEFINE_NAME', 'PP_END_DEFINE', 'PP_IDENTIFIER_PASTE', 'PP_MACRO_PARAM', 'PP_STRINGIFY', 'PP_UNDEFINE', 'PRAGMA', 'PRAGMA_END', 'PRAGMA_PACK', 'PTR_OP', 'RBRACE', 'RBRACKET', 'REGISTER', 'RESTRICT', 'RETURN', 'RIGHT_ASSIGN', 'RIGHT_OP', 'RPAREN', 'SEMI', 'SHORT', 'SIGNED', 'SIZEOF', 'STATIC', 'STRING_LITERAL', 'STRUCT', 'SUB_ASSIGN', 'SWITCH', 'TIMES', 'TYPEDEF', 'TYPE_NAME', 'UNION', 'UNSIGNED', 'VOID', 'VOLATILE', 'WHILE', 'XOR', 'XOR_ASSIGN', '_BOOL', '__ASM__', '__ATTRIBUTE__'))
_lexreflags   = 64
_lexliterals  = ''
_lexstateinfo = {'INITIAL': 'inclusive', 'DEFINE': 'exclusive', 'PRAGMA': 'exclusive'}
_lexstatere   = {'INITIAL': [('(?P<t_ANY_directive>\\#\\s+(?P<lineno>\\d+)\\s+"(?P<filename>[^"]+)"[ \\d]*\\n)|(?P<t_ANY_f_const_1>(?P<sig>[0-9]+)(?P<exp>([Ee][+-]?[0-9]+))(f|F|l|L)?)', [None, ('t_ANY_directive', 'directive'), None, None, ('t_ANY_f_const_1', 'f_const_1'), None, None]), ('(?P<t_ANY_f_const_2>(?P<sig>[0-9]*\\.[0-9]+)(?P<exp>([Ee][+-]?[0-9]+)?)(f|F|l|L)?)', [None, ('t_ANY_f_const_2', 'f_const_2'), None, None]), ('(?P<t_ANY_f_const_3>(?P<sig>[0-9]+\\.)(?P<exp>([Ee][+-]?[0-9]+)?)(f|F|l|L)?)', [None, ('t_ANY_f_const_3', 'f_const_3'), None, None]), ('(?P<t_ANY_f_const_4>(?P<hex>0[xX][a-fA-F0-9]+([Pp][+-]?[0-9]+))(f|F|l|L)?)', [None, ('t_ANY_f_const_4', 'f_const_4'), None]), ('(?P<t_ANY_f_const_5>(?P<hex>0[xX][a-fA-F0-9]*\\.[a-fA-F0-9]+([Pp][+-]?[0-9]+))(f|F|l|L)?)', [None, ('t_ANY_f_const_5', 'f_const_5'), None]), ('(?P<t_ANY_f_const_6>(?P<hex>0[xX][a-fA-F0-9]+\\.([Pp][+-]?[0-9]+))(f|F|l|L)?)|(?P<t_ANY_i_const_bin>(?P<p1>0[bB][0-1]*)(((u|U)(ll|LL|l|L)?)|((ll|LL|l|L)(u|U)?))?)', [None, ('t_ANY_f_const_6', 'f_const_6'), None, None, None, ('t_ANY_i_const_bin', 'i_const_bin'), None]), ('(?P<t_ANY_i_const_hex>(?P<p1>0[xX][a-fA-F0-9]+)(((u|U)(ll|LL|l|L)?)|((ll|LL|l|L)(u|U)?))?)', [None, ('t_ANY_i_const_hex', 'i_const_hex'), None]), ('(?P<t_ANY_i_const_dec>(?P<p1>[1-9][0-9]*)(((u|U)(ll|LL|l|L)?)|((ll|LL|l|L)(u|U)?))?)', [None, ('t_ANY_i_const_dec', 'i_const_dec'), None]), ('(?P<t_ANY_i_const_oct>0(?P<p1>[0-7]*)(((u|U)(ll|LL|l|L)?)|((ll|LL|l|L)(u|U)?))?)', [None, ('t_ANY_i_const_oct', 'i_const_oct'), None]), ("(?P<t_ANY_character_constant>(u8|u|U|L)?'(?P<p1>\\\\.|[^\\\\'])+')", [None, ('t_ANY_character_constant', 'character_constant'), None, None]), ('(?P<t_ANY_string_literal>"([^"\\\\\\n]|(\\\\[0-9a-zA-Z._~!=&\\^\\-\\\\?\'"]))*")|(?P<t_INITIAL_identifier>[a-zA-Z_][a-zA-Z_0-9]*)|(?P<t_INITIAL_newline>\\n)|(?P<t_INITIAL_pp_undefine>\\#undef)', [None, ('t_ANY_string_literal', 'string_literal'), None, None, ('t_INITIAL_identifier', 'identifier'), ('t_INITIAL_newline', 'newline'), ('t_INITIAL_pp_undefine', 'pp_undefine')]), ('(?P<t_INITIAL_pp_define>\\#define)|(?P<t_INITIAL_pragma>\\#pragma)|(?P<t_ANY_ELLIPSIS>\\.\\.\\.)|(?P<t_ANY_INC_OP>\\+\\+)|(?P<t_ANY_OR_OP>\\|\\|)|(?P<t_ANY_ADD_ASSIGN>\\+=)|(?P<t_ANY_LEFT_ASSIGN><<=)|(?P<t_ANY_MUL_ASSIGN>\\*=)|(?P<t_ANY_OR_ASSIGN>\\|=)|(?P<t_ANY_RIGHT_ASSIGN>>>=)|(?P<t_ANY_XOR_ASSIGN>\\^=)|(?P<t_ANY_AND_ASSIGN>&=)|(?P<t_ANY_AND_OP>&&)|(?P<t_ANY_CONDOP>\\?)|(?P<t_ANY_DEC_OP>--)|(?P<t_ANY_DIV_ASSIGN>/=)', [None, ('t_INITIAL_pp_define', 'pp_define'), ('t_INITIAL_pragma', 'pragma'), (None, 'ELLIPSIS'), (None, 'INC_OP'), (None, 'OR_OP'), (None, 'ADD_ASSIGN'), (None, 'LEFT_ASSIGN'), (None, 'MUL_ASSIGN'), (None, 'OR_ASSIGN'), (None, 'RIGHT_ASSIGN'), (None, 'XOR_ASSIGN'), (None, 'AND_ASSIGN'), (None, 'AND_OP'), (None, 'CONDOP'), (None, 'DEC_OP'), (None, 'DIV_ASSIGN')]), ('(?P<t_ANY_EQ_OP>==)|(?P<t_ANY_GE_OP>>=)|(?P<t_ANY_LBRACE>\\{)|(?P<t_ANY_LBRACKET>\\[)|(?P<t_ANY_LEFT_OP><<)|(?P<t_ANY_LE_OP><=)|(?P<t_ANY_LPAREN>\\()|(?P<t_ANY_MOD_ASSIGN>%=)|(?P<t_ANY_NE_OP>!=)|(?P<t_ANY_OR>\\|)|(?P<t_ANY_PERIOD>\\.)|(?P<t_ANY_PLUS>\\+)|(?P<t_ANY_PTR_OP>->)|(?P<t_ANY_RBRACE>\\})|(?P<t_ANY_RBRACKET>\\])|(?P<t_ANY_RIGHT_OP>>>)|(?P<t_ANY_RPAREN>\\))|(?P<t_ANY_SUB_ASSIGN>-=)|(?P<t_ANY_TIMES>\\*)|(?P<t_ANY_XOR>\\^)|(?P<t_ANY_AND>&)|(?P<t_ANY_COLON>:)|(?P<t_ANY_COMMA>,)|(?P<t_ANY_DIVIDE>/)|(?P<t_ANY_EQUALS>=)|(?P<t_ANY_GT>>)|(?P<t_ANY_LNOT>!)|(?P<t_ANY_LT><)|(?P<t_ANY_MINUS>-)|(?P<t_ANY_MOD>%)|(?P<t_ANY_NOT>~)|(?P<t_ANY_SEMI>;)', [None, (None, 'EQ_OP'), (None, 'GE_OP'), (None, 'LBRACE'), (None, 'LBRACKET'), (None, 'LEFT_OP'), (None, 'LE_OP'), (None, 'LPAREN'), (None, 'MOD_ASSIGN'), (None, 'NE_OP'), (None, 'OR'), (None, 'PERIOD'), (None, 'PLUS'), (None, 'PTR_OP'), (None, 'RBRACE'), (None, 'RBRACKET'), (None, 'RIGHT_OP'), (None, 'RPAREN'), (None, 'SUB_ASSIGN'), (None, 'TIMES'), (None, 'XOR'), (None, 'AND'), (None, 'COLON'), (None, 'COMMA'), (None, 'DIVIDE'), (None, 'EQUALS'), (None, 'GT'), (None, 'LNOT'), (None, 'LT'), (None, 'MINUS'), (None, 'MOD'), (None, 'NOT'), (None, 'SEMI')])], 'DEFINE': [('(?P<t_ANY_directive>\\#\\s+(?P<lineno>\\d+)\\s+"(?P<filename>[^"]+)"[ \\d]*\\n)', [None, ('t_ANY_directive', 'directive'), None, None]), ('(?P<t_ANY_f_const_1>(?P<sig>[0-9]+)(?P<exp>([Ee][+-]?[0-9]+))(f|F|l|L)?)', [None, ('t_ANY_f_const_1', 'f_const_1'), None, None]), ('(?P<t_ANY_f_const_2>(?P<sig>[0-9]*\\.[0-9]+)(?P<exp>([Ee][+-]?[0-9]+)?)(f|F|l|L)?)', [None, ('t_ANY_f_const_2', 'f_const_2'), None, None]), ('(?P<t_ANY_f_const_3>(?P<sig>[0-9]+\\.)(?P<exp>([Ee][+-]?[0-9]+)?)(f|F|l|L)?)|(?P<t_ANY_f_const_4>(?P<hex>0[xX][a-fA-F0-9]+([Pp][+-]?[0-9]+))(f|F|l|L)?)', [None, ('t_ANY_f_const_3', 'f_const_3'), None, None, None, None, ('t_ANY_f_const_4', 'f_const_4'), None]), ('(?P<t_ANY_f_const_5>(?P<hex>0[xX][a-fA-F0-9]*\\.[a-fA-F0-9]+([Pp][+-]?[0-9]+))(f|F|l|L)?)', [None, ('t_ANY_f_const_5', 'f_const_5'), None]), ('(?P<t_ANY_f_const_6>(?P<hex>0[xX][a-fA-F0-9]+\\.([Pp][+-]?[0-9]+))(f|F|l|L)?)', [None, ('t_ANY_f_const_6', 'f_const_6'), None]), ('(?P<t_ANY_i_const_bin>(?P<p1>0[bB][0-1]*)(((u|U)(ll|LL|l|L)?)|((ll|LL|l|L)(u|U)?))?)', [None, ('t_ANY_i_const_bin', 'i_const_bin'), None]), ('(?P<t_ANY_i_const_hex>(?P<p1>0[xX][a-fA-F0-9]+)(((u|U)(ll|LL|l|L)?)|((ll|LL|l|L)(u|U)?))?)', [None, ('t_ANY_i_const_hex', 'i_const_hex'), None]), ('(?P<t_ANY_i_const_dec>(?P<p1>[1-9][0-9]*)(((u|U)(ll|LL|l|L)?)|((ll|LL|l|L)(u|U)?))?)', [None, ('t_ANY_i_const_dec', 'i_const_dec'), None]), ('(?P<t_ANY_i_const_oct>0(?P<p1>[0-7]*)(((u|U)(ll|LL|l|L)?)|((ll|LL|l|L)(u|U)?))?)', [None, ('t_ANY_i_const_oct', 'i_const_oct'), None]), ('(?P<t_ANY_character_constant>(u8|u|U|L)?\'(?P<p1>\\\\.|[^\\\\\'])+\')|(?P<t_ANY_string_literal>"([^"\\\\\\n]|(\\\\[0-9a-zA-Z._~!=&\\^\\-\\\\?\'"]))*")|(?P<t_DEFINE_identifier>[a-zA-Z_][a-zA-Z_0-9]*)|(?P<t_DEFINE_newline>\\n)', [None, ('t_ANY_character_constant', 'character_constant'), None, None, ('t_ANY_string_literal', 'string_literal'), None, None, ('t_DEFINE_identifier', 'identifier'), ('t_DEFINE_newline', 'newline')]), ('(?P<t_DEFINE_pp_param_op>(\\#\\#)|(\\#))|(?P<t_ANY_ELLIPSIS>\\.\\.\\.)|(?P<t_ANY_INC_OP>\\+\\+)|(?P<t_ANY_OR_OP>\\|\\|)|(?P<t_ANY_ADD_ASSIGN>\\+=)|(?P<t_ANY_LEFT_ASSIGN><<=)|(?P<t_ANY_MUL_ASSIGN>\\*=)|(?P<t_ANY_OR_ASSIGN>\\|=)|(?P<t_ANY_RIGHT_ASSIGN>>>=)|(?P<t_ANY_XOR_ASSIGN>\\^=)|(?P<t_ANY_AND_ASSIGN>&=)|(?P<t_ANY_AND_OP>&&)|(?P<t_ANY_CONDOP>\\?)|(?P<t_ANY_DEC_OP>--)|(?P<t_ANY_DIV_ASSIGN>/=)|(?P<t_ANY_EQ_OP>==)', [None, ('t_DEFINE_pp_param_op', 'pp_param_op'), None, None, (None, 'ELLIPSIS'), (None, 'INC_OP'), (None, 'OR_OP'), (None, 'ADD_ASSIGN'), (None, 'LEFT_ASSIGN'), (None, 'MUL_ASSIGN'), (None, 'OR_ASSIGN'), (None, 'RIGHT_ASSIGN'), (None, 'XOR_ASSIGN'), (None, 'AND_ASSIGN'), (None, 'AND_OP'), (None, 'CONDOP'), (None, 'DEC_OP'), (None, 'DIV_ASSIGN'), (None, 'EQ_OP')]), ('(?P<t_ANY_GE_OP>>=)|(?P<t_ANY_LBRACE>\\{)|(?P<t_ANY_LBRACKET>\\[)|(?P<t_ANY_LEFT_OP><<)|(?P<t_ANY_LE_OP><=)|(?P<t_ANY_LPAREN>\\()|(?P<t_ANY_MOD_ASSIGN>%=)|(?P<t_ANY_NE_OP>!=)|(?P<t_ANY_OR>\\|)|(?P<t_ANY_PERIOD>\\.)|(?P<t_ANY_PLUS>\\+)|(?P<t_ANY_PTR_OP>->)|(?P<t_ANY_RBRACE>\\})|(?P<t_ANY_RBRACKET>\\])|(?P<t_ANY_RIGHT_OP>>>)|(?P<t_ANY_RPAREN>\\))|(?P<t_ANY_SUB_ASSIGN>-=)|(?P<t_ANY_TIMES>\\*)|(?P<t_ANY_XOR>\\^)|(?P<t_ANY_AND>&)|(?P<t_ANY_COLON>:)|(?P<t_ANY_COMMA>,)|(?P<t_ANY_DIVIDE>/)|(?P<t_ANY_EQUALS>=)|(?P<t_ANY_GT>>)|(?P<t_ANY_LNOT>!)|(?P<t_ANY_LT><)|(?P<t_ANY_MINUS>-)|(?P<t_ANY_MOD>%)|(?P<t_ANY_NOT>~)|(?P<t_ANY_SEMI>;)', [None, (None, 'GE_OP'), (None, 'LBRACE'), (None, 'LBRACKET'), (None, 'LEFT_OP'), (None, 'LE_OP'), (None, 'LPAREN'), (None, 'MOD_ASSIGN'), (None, 'NE_OP'), (None, 'OR'), (None, 'PERIOD'), (None, 'PLUS'), (None, 'PTR_OP'), (None, 'RBRACE'), (None, 'RBRACKET'), (None, 'RIGHT_OP'), (None, 'RPAREN'), (None, 'SUB_ASSIGN'), (None, 'TIMES'), (None, 'XOR'), (None, 'AND'), (None, 'COLON'), (None, 'COMMA'), (None, 'DIVIDE'), (None, 'EQUALS'), (None, 'GT'), (None, 'LNOT'), (None, 'LT'), (None, 'MINUS'), (None, 'MOD'), (None, 'NOT'), (None, 'SEMI')])], 'PRAGMA': [('(?P<t_ANY_directive>\\#\\s+(?P<lineno>\\d+)\\s+"(?P<filename>[^"]+)"[ \\d]*\\n)', [None, ('t_ANY_directive', 'directive'), None, None]), ('(?P<t_ANY_f_const_1>(?P<sig>[0-9]+)(?P<exp>([Ee][+-]?[0-9]+))(f|F|l|L)?)', [None, ('t_ANY_f_const_1', 'f_const_1'), None, None]), ('(?P<t_ANY_f_const_2>(?P<sig>[0-9]*\\.[0-9]+)(?P<exp>([Ee][+-]?[0-9]+)?)(f|F|l|L)?)', [None, ('t_ANY_f_const_2', 'f_const_2'), None, None]), ('(?P<t_ANY_f_const_3>(?P<sig>[0-9]+\\.)(?P<exp>([Ee][+-]?[0-9]+)?)(f|F|l|L)?)|(?P<t_ANY_f_const_4>(?P<hex>0[xX][a-fA-F0-9]+([Pp][+-]?[0-9]+))(f|F|l|L)?)', [None, ('t_ANY_f_const_3', 'f_const_3'), None, None, None, None, ('t_ANY_f_const_4', 'f_const_4'), None]), ('(?P<t_ANY_f_const_5>(?P<hex>0[xX][a-fA-F0-9]*\\.[a-fA-F0-9]+([Pp][+-]?[0-9]+))(f|F|l|L)?)', [None, ('t_ANY_f_const_5', 'f_const_5'), None]), ('(?P<t_ANY_f_const_6>(?P<hex>0[xX][a-fA-F0-9]+\\.([Pp][+-]?[0-9]+))(f|F|l|L)?)', [None, ('t_ANY_f_const_6', 'f_const_6'), None]), ('(?P<t_ANY_i_const_bin>(?P<p1>0[bB][0-1]*)(((u|U)(ll|LL|l|L)?)|((ll|LL|l|L)(u|U)?))?)', [None, ('t_ANY_i_const_bin', 'i_const_bin'), None]), ('(?P<t_ANY_i_const_hex>(?P<p1>0[xX][a-fA-F0-9]+)(((u|U)(ll|LL|l|L)?)|((ll|LL|l|L)(u|U)?))?)', [None, ('t_ANY_i_const_hex', 'i_const_hex'), None]), ('(?P<t_ANY_i_const_dec>(?P<p1>[1-9][0-9]*)(((u|U)(ll|LL|l|L)?)|((ll|LL|l|L)(u|U)?))?)', [None, ('t_ANY_i_const_dec', 'i_const_dec'), None]), ('(?P<t_ANY_i_const_oct>0(?P<p1>[0-7]*)(((u|U)(ll|LL|l|L)?)|((ll|LL|l|L)(u|U)?))?)', [None, ('t_ANY_i_const_oct', 'i_const_oct'), None]), ('(?P<t_ANY_character_constant>(u8|u|U|L)?\'(?P<p1>\\\\.|[^\\\\\'])+\')|(?P<t_ANY_string_literal>"([^"\\\\\\n]|(\\\\[0-9a-zA-Z._~!=&\\^\\-\\\\?\'"]))*")|(?P<t_PRAGMA_pack>pack)|(?P<t_PRAGMA_newline>\\n)', [None, ('t_ANY_character_constant', 'character_constant'), None, None, ('t_ANY_string_literal', 'string_literal'), None, None, ('t_PRAGMA_pack', 'pack'), ('t_PRAGMA_newline', 'newline')]), ('(?P<t_PRAGMA_identifier>[a-zA-Z_][a-zA-Z_0-9]*)|(?P<t_ANY_ELLIPSIS>\\.\\.\\.)|(?P<t_ANY_INC_OP>\\+\\+)|(?P<t_ANY_OR_OP>\\|\\|)|(?P<t_ANY_ADD_ASSIGN>\\+=)|(?P<t_ANY_LEFT_ASSIGN><<=)|(?P<t_ANY_MUL_ASSIGN>\\*=)|(?P<t_ANY_OR_ASSIGN>\\|=)|(?P<t_ANY_RIGHT_ASSIGN>>>=)|(?P<t_ANY_XOR_ASSIGN>\\^=)|(?P<t_ANY_AND_ASSIGN>&=)|(?P<t_ANY_AND_OP>&&)|(?P<t_ANY_CONDOP>\\?)|(?P<t_ANY_DEC_OP>--)|(?P<t_ANY_DIV_ASSIGN>/=)|(?P<t_ANY_EQ_OP>==)', [None, ('t_PRAGMA_identifier', 'identifier'), (None, 'ELLIPSIS'), (None, 'INC_OP'), (None, 'OR_OP'), (None, 'ADD_ASSIGN'), (None, 'LEFT_ASSIGN'), (None, 'MUL_ASSIGN'), (None, 'OR_ASSIGN'), (None, 'RIGHT_ASSIGN'), (None, 'XOR_ASSIGN'), (None, 'AND_ASSIGN'), (None, 'AND_OP'), (None, 'CONDOP'), (None, 'DEC_OP'), (None, 'DIV_ASSIGN'), (None, 'EQ_OP')]), ('(?P<t_ANY_GE_OP>>=)|(?P<t_ANY_LBRACE>\\{)|(?P<t_ANY_LBRACKET>\\[)|(?P<t_ANY_LEFT_OP><<)|(?P<t_ANY_LE_OP><=)|(?P<t_ANY_LPAREN>\\()|(?P<t_ANY_MOD_ASSIGN>%=)|(?P<t_ANY_NE_OP>!=)|(?P<t_ANY_OR>\\|)|(?P<t_ANY_PERIOD>\\.)|(?P<t_ANY_PLUS>\\+)|(?P<t_ANY_PTR_OP>->)|(?P<t_ANY_RBRACE>\\})|(?P<t_ANY_RBRACKET>\\])|(?P<t_ANY_RIGHT_OP>>>)|(?P<t_ANY_RPAREN>\\))|(?P<t_ANY_SUB_ASSIGN>-=)|(?P<t_ANY_TIMES>\\*)|(?P<t_ANY_XOR>\\^)|(?P<t_ANY_AND>&)|(?P<t_ANY_COLON>:)|(?P<t_ANY_COMMA>,)|(?P<t_ANY_DIVIDE>/)|(?P<t_ANY_EQUALS>=)|(?P<t_ANY_GT>>)|(?P<t_ANY_LNOT>!)|(?P<t_ANY_LT><)|(?P<t_ANY_MINUS>-)|(?P<t_ANY_MOD>%)|(?P<t_ANY_NOT>~)|(?P<t_ANY_SEMI>;)', [None, (None, 'GE_OP'), (None, 'LBRACE'), (None, 'LBRACKET'), (None, 'LEFT_OP'), (None, 'LE_OP'), (None, 'LPAREN'), (None, 'MOD_ASSIGN'), (None, 'NE_OP'), (None, 'OR'), (None, 'PERIOD'), (None, 'PLUS'), (None, 'PTR_OP'), (None, 'RBRACE'), (None, 'RBRACKET'), (None, 'RIGHT_OP'), (None, 'RPAREN'), (None, 'SUB_ASSIGN'), (None, 'TIMES'), (None, 'XOR'), (None, 'AND'), (None, 'COLON'), (None, 'COMMA'), (None, 'DIVIDE'), (None, 'EQUALS'), (None, 'GT'), (None, 'LNOT'), (None, 'LT'), (None, 'MINUS'), (None, 'MOD'), (None, 'NOT'), (None, 'SEMI')])]}
_lexstateignore = {'INITIAL': ' \t\x0b\x0c\r', 'DEFINE': ' \t\x0b\x0c\r', 'PRAGMA': ' \t\x0b\x0c\r'}
_lexstateerrorf = {'DEFINE': 't_DEFINE_error', 'INITIAL': 't_INITIAL_error', 'PRAGMA': 't_PRAGMA_error'}
_lexstateeoff = {}
