name: Track Dismissed Code Scanning Alerts

on:
  push:
    branches: 
     - main
     - dismissalCheckout   # Trigger only test branch, remember to remove before PRing to grass

jobs:
    get-dismissals-data:
        runs-on: ubuntu-latest  
        permissions: write-all

        steps:
     
     
           - uses: actions/checkout@v4 # Checkout repository code
    
           - name: Install dependencies (if needed for parsing security tool response)
             run: |
                # Add any package installation commands here (e.g., pip install requests)
                  sudo apt-get install jq  # Install jq for parsing JSON
                 
   
           - name: Get Security Alerts
          
             run: |

               #get only dismissed alerts using curl

               curl -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/ncsu-csc472-spring2024/grass-CI-playground/code-scanning/alerts?state=dismissed > alerts.json
                echo "alerts retrieved successfully!"


              # remember to change the path above before uploading to grass!

         

              #trigger a rerun

           - name: Upload the coding alerts as artifact
             uses: actions/upload-artifact@v4
             with:
              name: workflow-data
              path: alerts.json


# get the repository issues 
           - name: Get Current Issues        
             run: |
              
               curl -L \
               -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "X-GitHub-Api-Version: 2022-11-28" \
               https://api.github.com/repos/ncsu-csc472-spring2024/grass-CI-playground/issues > issues.json  
 
               # remember to change the path above before uploading to grass!
               echo "issues retrieved successfully!"
 
               #trigger a rerun
 
           - name: Upload the issues as artifact
             uses: actions/upload-artifact@v4
             with:
                 name: issues-data
                 path: issues.json

    track-dismissals:
     runs-on: ubuntu-latest  
     permissions: write-all
     needs: get-dismissals-data
    
     steps:
                   
     - uses: actions/checkout@v4 # Checkout repository code

     - name: Install dependencies (if needed for parsing security tool response)
       run: |
        # Add any package installation commands here (e.g., pip install requests)
          sudo apt-get install jq  # Install jq for parsing JSON

     - name: Download inssues artifacts
       uses: actions/download-artifact@v4
       with:
         name: issues-data   # Match the name used for upload
       
     - name: Download alerts artifacts
       uses: actions/download-artifact@v4
       with:    
          name: workflow-data 

     - name: Filter alerts and create issues
       run: |
        #make an array called alertsArray
          alertsArray=()
          alertsID=()


          #for every alert in alerts.json, append the alert to the alertsArray
          alertsArray+=($(cat alerts.json | jq .[].most_recent_instance.message.text))
       
         #append the alert id number to each alert array
          alertsID+=($(cat alerts.json | jq .[].number))

         #append the alert id number to each alert in alertsArray
          for i in ${!alertsArray[@]}
          do
            alertsArray[$i]="${alertsArray[$i]} ID: ${alertsID[$i]}"
          done

         #append the string "DISMISSED: " to each alert in alertsArray
          alerts=()
          for alert in $alertsArray
          do
            alerts+=("DISMISSED: $alert")
          done

          echo "Alerts filtered successfully!


         #if the alert in alerts is not a title in issues.json, create a new issue with that title
          for alert in $alerts
          do
            if ! grep -q "$alert" issues.json
            then
              curl -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -X POST \
              -d "{\"title\":\"$alert\",\"body\":\"This issue was created because the alert was dismissed.\"}" \
              https://api.github.com/repos/ncsu-csc472-spring2024/grass-CI-playground/issues
            fi
          done



          echo "Alerts filtered and new issues created successfully!"


        

 
        
          
       #trigger a rerun