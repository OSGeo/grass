name: Track Dismissed Code Scanning Alerts

on:
  push:
    branches: 
     - main
     - dismissalCheckout   # Trigger only test branch, remember to remove before PRing to grass

jobs:
    get-dismissals-data:
        runs-on: ubuntu-latest  
        permissions: write-all

        steps:
     
     
           - uses: actions/checkout@v4 # Checkout repository code
    
           - name: Install dependencies (if needed for parsing security tool response)
             run: |
                # Add any package installation commands here (e.g., pip install requests)
                  sudo apt-get install jq  # Install jq for parsing JSON
                 
   
           - name: Get Security Alerts
          
             run: |

               #get only dismissed alerts using curl

               curl -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/ncsu-csc472-spring2024/grass-CI-playground/code-scanning/alerts?state=dismissed > alerts.json
                echo "alerts retrieved successfully!"


              # remember to change the path above before uploading to grass!

         

              #trigger a rerun

           - name: Upload the coding alerts as artifact
             uses: actions/upload-artifact@v4
             with:
              name: workflow-data
              path: alerts.json


# get the repository issues 
           - name: Get Current Issues        
             run: |
              
               curl -L \
               -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "X-GitHub-Api-Version: 2022-11-28" \
               https://api.github.com/repos/ncsu-csc472-spring2024/grass-CI-playground/issues > issues.json  
 
               # remember to change the path above before uploading to grass!
               echo "issues retrieved successfully!"
 
               #trigger a rerun
 
           - name: Upload the issues as artifact
             uses: actions/upload-artifact@v4
             with:
                 name: issues-data
                 path: issues.json

    track-dismissals:
     runs-on: ubuntu-latest  
     permissions: write-all
     needs: get-dismissals-data
    
     steps:
                   
     - uses: actions/checkout@v4 # Checkout repository code

     - name: Install dependencies (if needed for parsing security tool response)
       run: |
        # Add any package installation commands here (e.g., pip install requests)
          sudo apt-get install jq  # Install jq for parsing JSON

     - name: Download inssues artifacts
       uses: actions/download-artifact@v4
       with:
         name: issues-data   # Match the name used for upload
       
     - name: Download alerts artifacts
       uses: actions/download-artifact@v4
       with:    
          name: workflow-data 

     - name: Filter alerts and create issues
       run: |
        # make an array of strings to store the alerts

                  
          while IFS= read -r line; do
            # Process each line (string) here
            echo "Processing: $line dismissed"

          

           #seperate $title into variables for number, message, and dismissed_comment seperated by tab
            IFS=$'\t' read -r number message dismissed_comment <<< "$line"
            echo "number: $number"
            echo "message: $message"
            echo "dismissed_comment: $dismissed_comment"


            #check if the alert is already an issue
            if grep -q "DISMISSED $number $message" issues.json; then
              echo "Alert DISMISSED $number $message is already an issue"
            else
              echo "Alert $number is not an issue"
              #create an issue
              curl -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -d "$(cat <<EOF
              {
                "title": "DISMISSED $number $message",
                "body": $dismissed_comment
              }
              EOF
              )" \
              https://api.github.com/repos/ncsu-csc472-spring2024/grass-CI-playground/issues
            fi


          done <<< "$(cat alerts.json | jq -r '[.[].number, .[].most_recent_instance.message.text, .[].dismissed_comment]  | @tsv' )"
          
 

          
       #trigger a rerun