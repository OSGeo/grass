name: Ubuntu
# Build and run tests on Ubuntu

on:
  - push
  - pull_request

# Cancel previous workflow runs for pull requests.
# The concurrency group is workflow name and the branch name for pull requests,
# but it is the commit hash for any other events, so the group is unique and no
# runs are canceled.
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: ${{ matrix.os }} tests

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-18.04
          - ubuntu-20.04
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget git gawk findutils
          xargs -a <(awk '! /^ *(#|$)/' ".github/workflows/apt.txt") -r -- \
              sudo apt-get install -y --no-install-recommends --no-install-suggests

      - name: Create installation directory
        run: |
          mkdir $HOME/install

      - name: Set number of cores for compilation
        run: |
          echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV

      - name: Set LD_LIBRARY_PATH for compilation
        run: |
          echo "LD_LIBRARY_PATH=$HOME/install/lib" >> $GITHUB_ENV

      - name: Build
        run: .github/workflows/build_${{ matrix.os }}.sh $HOME/install

      - name: Add the bin directory to PATH
        run: |
          echo "$HOME/install/bin" >> $GITHUB_PATH

      - name: Test executing of the grass command
        run: .github/workflows/test_simple.sh

      - name: Run tests
        run: .github/workflows/test_thorough.sh

      - name: Make HTML test report available
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: testreport-${{ matrix.os }}
          path: testreport
          retention-days: 3

      - name: Print installed versions
        if: always()
        run: .github/workflows/print_versions.sh
