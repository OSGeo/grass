---
name: Additional Checks

# Checks which are not in standardized tools such as custom checks by scripts
# in the source code or small 3rd party checks without large projects behind them.
# Number of disconnected, but simple checks can be combined into one workflow
# (and job) to reduce the number of jobs.

on:
  push:
    branches:
      - main
      - releasebranch_*
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  additional-checks:
    name: Additional checks
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository contents
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 31

      - name: Set up Python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: '3.10'
      - name: Install uv and restore its cache
        uses: astral-sh/setup-uv@bd01e18f51369d5a26f1651c3cb451d3417e3bba # v6.3.1

      - name: Check that files with the same content are the same
        run: |
          diff Dockerfile docker/ubuntu/Dockerfile

      - name: Generate core modules with last commit JSON file and test it
        run: |
          python -m pip install pytest pytest-depends
          python utils/generate_last_commit_file.py .
          pytest utils/test_generate_last_commit_file.py

      - name: Generate release notes using git log
        run: |
          python -m pip install PyYAML requests
          # Git works without any special permissions.
          # Using current branch or the branch against the PR is open.
          # Using the last 30 commits (for branches, tags, and PRs).
          # End is the current (latest) commit.
          python ./utils/generate_release_notes.py log \
              ${{ github.ref_name }} \
              $(git rev-parse HEAD~30) \
              ""
      - name: "Cache pre-commit"
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: "Run pre-commit"
        run: |
          echo '```console' > "$GITHUB_STEP_SUMMARY"
          # Enable color output for pre-commit and remove it for the summary
          # Use --hook-stage=manual to enable slower pre-commit hooks that are skipped by default
          uvx pre-commit run --all-files --show-diff-on-failure --color=always --hook-stage=manual | \
            tee >(sed -E 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})*)?[mGK]//g' >> "$GITHUB_STEP_SUMMARY") >&1
          exit_code="${PIPESTATUS[0]}"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          exit "$exit_code"
