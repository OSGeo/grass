name: Coverity Scan
on:
  workflow_dispatch: # run whenever a contributor calls it
  schedule:
    - cron: '48 5 * * *' # Run at 05:48
    # Coverity will let GRASS do a scan a maximum of twice per day, so this schedule will help GRASS fit within that limit with some additional space for manual runs
permissions:
  contents: read
jobs:
  coverity:
    runs-on: ubuntu-22.04
    # if: github.repository == 'OSGeo/grass' TODO: uncomment this line when it is deployed
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Get dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget git gawk findutils
          xargs -a <(awk '! /^ *(#|$)/' ".github/workflows/apt.txt") -r -- \
              sudo apt-get install -y --no-install-recommends --no-install-suggests
      - name: Create installation directory
        run: |
          mkdir $HOME/install

      - name: Set number of cores for compilation
        run: |
          echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV

      - name: Set LD_LIBRARY_PATH for compilation
        run: |
          echo "LD_LIBRARY_PATH=$HOME/install/lib" >> $GITHUB_ENV

      - name: Print build environment variables
        run: |
          printenv | sort
          gcc --version
          ldd --version
      - name: Build
        env:
          # TODO: -pedantic-errors here won't go through ./configure (with GNU C)
          CFLAGS: -fPIC -Wvla
          # TODO: -pedantic-errors here won't compile
          CXXFLAGS: -fPIC
        run: .github/workflows/build_ubuntu-22.04_without_x.sh $HOME/install -Werror
          
  # build:
  #   runs-on: [ ubuntu-latest ]
  #   steps:
  #     - name: Checkout Source
  #       uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
  #     - name: Coverity Scan
  #       uses: synopsys-sig/synopsys-action@cef5e38596faf5d2787bbff78a5d7255a9f7682b # v1.8.0
  #       with:
  #         ### SCANNING: Required fields
  #         coverity_url: ${{ secrets.COVERITY_URL }}               # The URL to Coverity
  #         coverity_user: ${{ secrets.COVERITY_USER }}             # The user for the Coverity project
  #         coverity_passphrase: ${{ secrets.COVERITY_PASSPHRASE }} # The password for the Coverity user
  #         coverity_version: '2023.6.2'                          
